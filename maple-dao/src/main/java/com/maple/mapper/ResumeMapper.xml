<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maple.mapper.ResumeMapper" >
  <resultMap id="BaseResultMap" type="com.maple.pojo.Resume" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="peradv" property="peradv" jdbcType="VARCHAR" />
    <result column="startpd" property="startpd" jdbcType="VARCHAR" />
    <result column="endpd" property="endpd" jdbcType="VARCHAR" />
    <result column="industryid" property="industryid" jdbcType="VARCHAR" />
    <result column="socialurl" property="socialurl" jdbcType="VARCHAR" />
    <result column="provinceid" property="provinceid" jdbcType="INTEGER" />
    <result column="cityid" property="cityid" jdbcType="VARCHAR" />
    <result column="postionid" property="postionid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, peradv, startpd, endpd, industryid, socialurl, provinceid, cityid, postionid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maple.pojo.ResumeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from resume
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from resume
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.maple.pojo.ResumeExample" >
    delete from resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maple.pojo.Resume" >
    insert into resume (id, userid, peradv, 
      startpd, endpd, industryid, 
      socialurl, provinceid, cityid, 
      postionid)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{peradv,jdbcType=VARCHAR}, 
      #{startpd,jdbcType=VARCHAR}, #{endpd,jdbcType=VARCHAR}, #{industryid,jdbcType=VARCHAR}, 
      #{socialurl,jdbcType=VARCHAR}, #{provinceid,jdbcType=INTEGER}, #{cityid,jdbcType=VARCHAR}, 
      #{postionid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maple.pojo.Resume" >
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="peradv != null" >
        peradv,
      </if>
      <if test="startpd != null" >
        startpd,
      </if>
      <if test="endpd != null" >
        endpd,
      </if>
      <if test="industryid != null" >
        industryid,
      </if>
      <if test="socialurl != null" >
        socialurl,
      </if>
      <if test="provinceid != null" >
        provinceid,
      </if>
      <if test="cityid != null" >
        cityid,
      </if>
      <if test="postionid != null" >
        postionid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="peradv != null" >
        #{peradv,jdbcType=VARCHAR},
      </if>
      <if test="startpd != null" >
        #{startpd,jdbcType=VARCHAR},
      </if>
      <if test="endpd != null" >
        #{endpd,jdbcType=VARCHAR},
      </if>
      <if test="industryid != null" >
        #{industryid,jdbcType=VARCHAR},
      </if>
      <if test="socialurl != null" >
        #{socialurl,jdbcType=VARCHAR},
      </if>
      <if test="provinceid != null" >
        #{provinceid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        #{cityid,jdbcType=VARCHAR},
      </if>
      <if test="postionid != null" >
        #{postionid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maple.pojo.ResumeExample" resultType="java.lang.Integer" >
    select count(*) from resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update resume
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.peradv != null" >
        peradv = #{record.peradv,jdbcType=VARCHAR},
      </if>
      <if test="record.startpd != null" >
        startpd = #{record.startpd,jdbcType=VARCHAR},
      </if>
      <if test="record.endpd != null" >
        endpd = #{record.endpd,jdbcType=VARCHAR},
      </if>
      <if test="record.industryid != null" >
        industryid = #{record.industryid,jdbcType=VARCHAR},
      </if>
      <if test="record.socialurl != null" >
        socialurl = #{record.socialurl,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceid != null" >
        provinceid = #{record.provinceid,jdbcType=INTEGER},
      </if>
      <if test="record.cityid != null" >
        cityid = #{record.cityid,jdbcType=VARCHAR},
      </if>
      <if test="record.postionid != null" >
        postionid = #{record.postionid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update resume
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=VARCHAR},
      peradv = #{record.peradv,jdbcType=VARCHAR},
      startpd = #{record.startpd,jdbcType=VARCHAR},
      endpd = #{record.endpd,jdbcType=VARCHAR},
      industryid = #{record.industryid,jdbcType=VARCHAR},
      socialurl = #{record.socialurl,jdbcType=VARCHAR},
      provinceid = #{record.provinceid,jdbcType=INTEGER},
      cityid = #{record.cityid,jdbcType=VARCHAR},
      postionid = #{record.postionid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maple.pojo.Resume" >
    update resume
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="peradv != null" >
        peradv = #{peradv,jdbcType=VARCHAR},
      </if>
      <if test="startpd != null" >
        startpd = #{startpd,jdbcType=VARCHAR},
      </if>
      <if test="endpd != null" >
        endpd = #{endpd,jdbcType=VARCHAR},
      </if>
      <if test="industryid != null" >
        industryid = #{industryid,jdbcType=VARCHAR},
      </if>
      <if test="socialurl != null" >
        socialurl = #{socialurl,jdbcType=VARCHAR},
      </if>
      <if test="provinceid != null" >
        provinceid = #{provinceid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        cityid = #{cityid,jdbcType=VARCHAR},
      </if>
      <if test="postionid != null" >
        postionid = #{postionid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maple.pojo.Resume" >
    update resume
    set userid = #{userid,jdbcType=VARCHAR},
      peradv = #{peradv,jdbcType=VARCHAR},
      startpd = #{startpd,jdbcType=VARCHAR},
      endpd = #{endpd,jdbcType=VARCHAR},
      industryid = #{industryid,jdbcType=VARCHAR},
      socialurl = #{socialurl,jdbcType=VARCHAR},
      provinceid = #{provinceid,jdbcType=INTEGER},
      cityid = #{cityid,jdbcType=VARCHAR},
      postionid = #{postionid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>